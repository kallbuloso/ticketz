networks:
  ticketz:

volumes:
  redis_data:
  backend_public:
  backend_private:
    
services:

  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    volumes:
      - backend_public:/usr/src/app/public
      - backend_private:/usr/src/app/private
    env_file:
      - .env-backend-acme
    restart: always
    depends_on:
      - acme-companion
      - postgres
      - redis
    networks:
      - ticketz

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    env_file:
      - .env-frontend-acme
    volumes:
      - backend_public:/var/www/backend-public/      
    restart: always
    depends_on:
      - acme-companion
      - backend
    networks:
      - ticketz

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    expose:
      - 6379
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - ticketz

  sidekick:
    image: ghcr.io/ticketz-oss/ticketz-sidekick:latest
    profiles: ["do-not-start"]
    env_file:
      - .env-backend-acme
    restart: unless-stopped
    volumes:
      - backend_public:/backend-public
      - backend_private:/backend-private
      - ./backups:/backups
      - ./retrieve:/retrieve
    networks:
      - ticketz
